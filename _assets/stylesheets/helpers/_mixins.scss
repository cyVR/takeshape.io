@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin cf() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin strip-input-style() {
  background-color: transparent;
  border: none;
  border-radius: 0;
  outline: 0 none !important;
  appearance: none;
}

@mixin ratio-box($percent) {
  position: relative;

  &:before {
    content: "";
    display: block;
    padding-top: $percent;
  }

  > div {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}

/* Media Query Helpers */

@mixin above($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value != null {
    @media (min-width: $value) {
      @content;
    }
  }

  @else {
    @warn "Unknown `#{$breakpoint}` in $breakpoints.";
  }
}

@mixin below($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value != null {
    @media (max-width: $value) {
      @content;
    }
  }

  @else {
    @warn "Unknown `#{$breakpoint}` in $breakpoints.";
  }
}
